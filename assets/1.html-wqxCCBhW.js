import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,f as n,o as e}from"./app-DXO5H_9z.js";const l="/assets/images/mcp1.png",h="/assets/images/mcp.png",t={};function p(k,s){return e(),a("div",null,s[0]||(s[0]=[n('<h1 id="mcp-服务器创建指南" tabindex="-1"><a class="header-anchor" href="#mcp-服务器创建指南"><span>MCP 服务器创建指南</span></a></h1><p>在创建 MCP（模型上下文协议）服务器时，理解其工作原理至关重要。MCP 服务器在非交互环境中运行，无法在运行时发起 OAuth 流程、打开浏览器窗口或提示用户输入。因此，所有凭据和身份验证令牌必须通过环境变量在 MCP 设置配置中提前提供。</p><figure><img src="'+l+`" alt="MCP" tabindex="0" loading="lazy"><figcaption>MCP</figcaption></figure><h2 id="_1-mcp-服务器的基本概念" tabindex="-1"><a class="header-anchor" href="#_1-mcp-服务器的基本概念"><span>1. MCP 服务器的基本概念</span></a></h2><p>MCP 服务器的主要功能是提供工具和资源，允许用户通过 API 访问特定的数据或服务。例如，您可以创建一个 MCP 服务器来获取天气信息，使用 OpenWeather API 来实现。</p><h2 id="_2-创建-mcp-服务器的步骤" tabindex="-1"><a class="header-anchor" href="#_2-创建-mcp-服务器的步骤"><span>2. 创建 MCP 服务器的步骤</span></a></h2><p>以下是创建 MCP 服务器的基本步骤：</p><h4 id="步骤-1-初始化项目" tabindex="-1"><a class="header-anchor" href="#步骤-1-初始化项目"><span>步骤 1: 初始化项目</span></a></h4><p>使用 create-typescript-server 工具在默认的 MCP 服务器目录中启动一个新项目：</p><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">cd</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> C</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:\\</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">Users</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">\\</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">lvzp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">\\</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">Documents</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">\\</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">Cline</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">\\</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">MCP</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">npx</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> @modelcontextprotocol</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">create</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">server</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> weather</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">server</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">cd</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> weather</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">server</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">npm</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> install</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> axios</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这将创建一个新的项目结构。</p><h2 id="步骤-2-编写服务器代码" tabindex="-1"><a class="header-anchor" href="#步骤-2-编写服务器代码"><span>步骤 2: 编写服务器代码</span></a></h2><p>在 src/weather-server/index.ts 中编写服务器的主要实现代码。以下是一个简单的示例：</p><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> { </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">Server</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> } </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;@modelcontextprotocol/sdk/server/index.js&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> axios</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;axios&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> API_KEY</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> process</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">env</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">OPENWEATHER_API_KEY</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 从环境变量获取 API 密钥</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">!</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">API_KEY</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  throw</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> new </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">Error</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;OPENWEATHER_API_KEY 环境变量是必需的&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 服务器实现</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> WeatherServer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  private</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> server: Server;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  constructor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">    this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">server</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> new </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">Server</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">({ </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;weather-server&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;0.1.0&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> });</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">    this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">setupHandlers</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  private</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> setupHandlers</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // 设置处理器以响应请求</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  async</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> run</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // 启动服务器</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> server</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> new </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">WeatherServer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">server</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">run</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">catch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">error</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">步骤</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">编译和运行</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">使用以下命令编译项目</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">：</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">npm</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> run</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> build</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后，确保在 MCP 设置文件中添加服务器配置，包含 API 密钥等环境变量。</p><h2 id="_3-mcp-服务器的配置" tabindex="-1"><a class="header-anchor" href="#_3-mcp-服务器的配置"><span>3. MCP 服务器的配置</span></a></h2><p>在 MCP 设置文件中添加新服务器的配置，确保设置 disabled=false 和 autoApprove=[]。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    {</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">      &quot;mcpServers&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: {</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        &quot;weather&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: {</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">          &quot;command&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;node&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">          &quot;args&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/path/to/weather-server/build/index.js&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">],</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">          &quot;env&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: {</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">            &quot;OPENWEATHER_API_KEY&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;用户提供的 API 密钥&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">          }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="_4-测试和使用" tabindex="-1"><a class="header-anchor" href="#_4-测试和使用"><span>4. 测试和使用</span></a></h1><p>完成配置后，系统将自动运行所有服务器，您可以通过命令访问新工具和资源。例如，您可以询问“旧金山的天气如何？”来获取天气信息。</p><figure><img src="`+h+'" alt="MCP" tabindex="0" loading="lazy"><figcaption>MCP</figcaption></figure><p>结论<br> 创建 MCP 服务器可以扩展您的应用程序功能，使其能够与外部 API 交互。通过遵循上述步骤，您可以轻松设置和配置自己的 MCP 服务器。</p>',22)]))}const A=i(t,[["render",p]]),c=JSON.parse('{"path":"/zh/posts/%E5%8D%8F%E8%AE%AE/1.html","title":"MCP 服务器创建指南","lang":"zh-CN","frontmatter":{"icon":"pen-to-square","date":"2022-01-01T00:00:00.000Z","category":["MCP"],"tag":["AI"],"description":"MCP 服务器创建指南 在创建 MCP（模型上下文协议）服务器时，理解其工作原理至关重要。MCP 服务器在非交互环境中运行，无法在运行时发起 OAuth 流程、打开浏览器窗口或提示用户输入。因此，所有凭据和身份验证令牌必须通过环境变量在 MCP 设置配置中提前提供。 MCPMCP 1. MCP 服务器的基本概念 MCP 服务器的主要功能是提供工具和资源...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"MCP 服务器创建指南\\",\\"image\\":[\\"https://mister-hope.github.io/assets/images/mcp1.png\\",\\"https://mister-hope.github.io/assets/images/mcp.png\\"],\\"datePublished\\":\\"2022-01-01T00:00:00.000Z\\",\\"dateModified\\":\\"2025-04-23T05:12:54.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"HQSIM\\",\\"url\\":\\"https://blog.hqsim.com\\"}]}"],["meta",{"property":"og:url","content":"https://mister-hope.github.io/zh/posts/%E5%8D%8F%E8%AE%AE/1.html"}],["meta",{"property":"og:site_name","content":"HQSIM"}],["meta",{"property":"og:title","content":"MCP 服务器创建指南"}],["meta",{"property":"og:description","content":"MCP 服务器创建指南 在创建 MCP（模型上下文协议）服务器时，理解其工作原理至关重要。MCP 服务器在非交互环境中运行，无法在运行时发起 OAuth 流程、打开浏览器窗口或提示用户输入。因此，所有凭据和身份验证令牌必须通过环境变量在 MCP 设置配置中提前提供。 MCPMCP 1. MCP 服务器的基本概念 MCP 服务器的主要功能是提供工具和资源..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://mister-hope.github.io/assets/images/mcp1.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-04-23T05:12:54.000Z"}],["meta",{"property":"article:tag","content":"AI"}],["meta",{"property":"article:published_time","content":"2022-01-01T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-04-23T05:12:54.000Z"}]]},"git":{"createdTime":1745385174000,"updatedTime":1745385174000,"contributors":[{"name":"luke","username":"luke","email":"173202461@qq.com","commits":1,"url":"https://github.com/luke"}]},"readingTime":{"minutes":2.05,"words":615},"filePathRelative":"zh/posts/协议/1.md","excerpt":"\\n<p>在创建 MCP（模型上下文协议）服务器时，理解其工作原理至关重要。MCP 服务器在非交互环境中运行，无法在运行时发起 OAuth 流程、打开浏览器窗口或提示用户输入。因此，所有凭据和身份验证令牌必须通过环境变量在 MCP 设置配置中提前提供。</p>\\n<figure><img src=\\"/assets/images/mcp1.png\\" alt=\\"MCP\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption>MCP</figcaption></figure>\\n<h2>1. MCP 服务器的基本概念</h2>\\n<p>MCP 服务器的主要功能是提供工具和资源，允许用户通过 API 访问特定的数据或服务。例如，您可以创建一个 MCP 服务器来获取天气信息，使用 OpenWeather API 来实现。</p>","autoDesc":true}');export{A as comp,c as data};
