import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,e as t,o as e}from"./app-C_abS_4z.js";const n="/assets/images/Csharp_Logo.png",h={};function r(l,s){return e(),a("div",null,s[0]||(s[0]=[t('<h1 id="" tabindex="-1"><a class="header-anchor" href="#"><span></span></a></h1><h1 id="c-编程语言全解-起源、设计理念、语法技巧与实战应用" tabindex="-1"><a class="header-anchor" href="#c-编程语言全解-起源、设计理念、语法技巧与实战应用"><span>[C# ] 编程语言全解：起源、设计理念、语法技巧与实战应用</span></a></h1><figure><img src="'+n+`" alt="C#" tabindex="0" loading="lazy"><figcaption>C#</figcaption></figure><blockquote><p><em>“C# 是强大而现代的语言，融合了 C++ 的高性能与 Java 的简洁稳定。”</em></p></blockquote><hr><h2 id="🧬-1-c-的起源与创造者" tabindex="-1"><a class="header-anchor" href="#🧬-1-c-的起源与创造者"><span>🧬 1. C# 的起源与创造者</span></a></h2><p>C#（发音 &quot;C sharp&quot;）是由微软公司于 2000 年推出的现代化编程语言，由<strong>Anders Hejlsberg</strong> 主导开发（他也是 Turbo Pascal 和 Delphi 的作者）。</p><h3 id="🎯-目标" tabindex="-1"><a class="header-anchor" href="#🎯-目标"><span>🎯 目标：</span></a></h3><p>打造一门适用于<strong>Windows 平台、Web 应用、企业开发</strong>的新一代语言，集成于微软的 .NET 平台之中。</p><hr><h2 id="💡-2-设计理念与语言特色" tabindex="-1"><a class="header-anchor" href="#💡-2-设计理念与语言特色"><span>💡 2. 设计理念与语言特色</span></a></h2><table><thead><tr><th>特性</th><th>描述</th></tr></thead><tbody><tr><td>面向对象</td><td>支持封装、继承、多态</td></tr><tr><td>类型安全</td><td>静态类型检查 + Nullable 类型</td></tr><tr><td>自动内存管理</td><td>内置垃圾回收机制（GC）</td></tr><tr><td>异常处理机制</td><td><code>try-catch-finally</code> 块保障程序稳定运行</td></tr><tr><td>现代语法糖</td><td>支持 Lambda、LINQ、异步编程、模式匹配等</td></tr><tr><td>跨平台能力</td><td>借助 .NET Core / .NET 6+，可运行于 Linux、macOS、Windows</td></tr></tbody></table><hr><h2 id="⚙️-3-底层逻辑-c-如何运行" tabindex="-1"><a class="header-anchor" href="#⚙️-3-底层逻辑-c-如何运行"><span>⚙️ 3. 底层逻辑：C# 如何运行？</span></a></h2><p>C# 属于托管语言，依赖 .NET 运行时。</p><h3 id="🧱-执行流程" tabindex="-1"><a class="header-anchor" href="#🧱-执行流程"><span>🧱 执行流程：</span></a></h3><div class="language-mermaid line-numbers-mode" data-highlighter="shiki" data-ext="mermaid" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">graph TD</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    A[.cs 源代码] --&gt; B[csc 编译器]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    B --&gt; C[IL 中间语言]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    C --&gt; D[CLR 执行（JIT 编译）]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    D --&gt; E[CPU 执行机器码]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="🔧-clr-common-language-runtime-作用" tabindex="-1"><a class="header-anchor" href="#🔧-clr-common-language-runtime-作用"><span>🔧 CLR（Common Language Runtime）作用：</span></a></h3><ul><li>类型安全验证</li><li>垃圾回收与内存管理</li><li>异常处理机制</li><li>安全性与权限控制</li></ul><hr><h2 id="✍️-4-基础语法与开发技巧" tabindex="-1"><a class="header-anchor" href="#✍️-4-基础语法与开发技巧"><span>✍️ 4. 基础语法与开发技巧</span></a></h2><h3 id="🚀-hello-world" tabindex="-1"><a class="header-anchor" href="#🚀-hello-world"><span>🚀 Hello World</span></a></h3><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">using</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> Program</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> Main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">        Console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">WriteLine</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Hello, C#!&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="🔥-常见语法技巧" tabindex="-1"><a class="header-anchor" href="#🔥-常见语法技巧"><span>🔥 常见语法技巧</span></a></h3><h4 id="✅-lambda-表达式" tabindex="-1"><a class="header-anchor" href="#✅-lambda-表达式"><span>✅ Lambda 表达式</span></a></h4><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">Func</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">add</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">b</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) =&gt; </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">a</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> +</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> b</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="✅-linq-查询语法" tabindex="-1"><a class="header-anchor" href="#✅-linq-查询语法"><span>✅ LINQ 查询语法</span></a></h4><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> evens</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> numbers</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Where</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =&gt; </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> %</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> ==</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ToList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="✅-异步编程" tabindex="-1"><a class="header-anchor" href="#✅-异步编程"><span>✅ 异步编程</span></a></h4><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">async</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> Task</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">string</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">GetDataAsync</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> response</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> await </span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">httpClient</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">GetStringAsync</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> response</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="✅-模式匹配" tabindex="-1"><a class="header-anchor" href="#✅-模式匹配"><span>✅ 模式匹配</span></a></h4><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">obj</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> is </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">string</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> s</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> &amp;&amp;</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">Length</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> &gt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">    Console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">WriteLine</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="🧩-5-应用场景广泛" tabindex="-1"><a class="header-anchor" href="#🧩-5-应用场景广泛"><span>🧩 5. 应用场景广泛</span></a></h2><table><thead><tr><th>场景</th><th>框架或技术栈</th></tr></thead><tbody><tr><td>Web 后端开发</td><td><a href="http://ASP.NET" target="_blank" rel="noopener noreferrer">ASP.NET</a> Core、Web API</td></tr><tr><td>桌面应用</td><td>WPF、WinForms、MAUI</td></tr><tr><td>游戏开发</td><td>Unity（C# 是主要脚本语言）</td></tr><tr><td>云平台服务</td><td>Azure Functions、.NET on AWS</td></tr><tr><td>移动开发</td><td>Xamarin / MAUI</td></tr><tr><td>跨平台工具</td><td>CLI 工具、桌面工具（跨系统）</td></tr></tbody></table><hr><h2 id="🏁-6-c-的优势总结" tabindex="-1"><a class="header-anchor" href="#🏁-6-c-的优势总结"><span>🏁 6. C# 的优势总结</span></a></h2><table><thead><tr><th>优点</th><th>说明</th></tr></thead><tbody><tr><td>微软生态支持</td><td>与 Windows、Azure 无缝集成</td></tr><tr><td>开发效率高</td><td>语法现代，工具链强大</td></tr><tr><td>跨平台能力提升</td><td>.NET Core/.NET 6+ 完善了 Linux 支持</td></tr><tr><td>企业友好</td><td>适合大规模系统和敏捷开发</td></tr></tbody></table><hr><h2 id="📚-7-入门建议与学习资源" tabindex="-1"><a class="header-anchor" href="#📚-7-入门建议与学习资源"><span>📚 7. 入门建议与学习资源</span></a></h2><table><thead><tr><th>资源</th><th>说明</th></tr></thead><tbody><tr><td><a href="https://learn.microsoft.com/dotnet/csharp/" target="_blank" rel="noopener noreferrer">C# 官方文档</a></td><td>微软权威教程</td></tr><tr><td>《C# 9.0 in a Nutshell》</td><td>深入全面</td></tr><tr><td><a href="https://dotnetfiddle.net/" target="_blank" rel="noopener noreferrer">DotNetFiddle</a></td><td>在线编写运行 C# 程序</td></tr><tr><td><a href="https://learn.unity.com/" target="_blank" rel="noopener noreferrer">Unity Learn</a></td><td>游戏开发专用 C# 入门平台</td></tr></tbody></table><hr><h2 id="✅-总结一句话" tabindex="-1"><a class="header-anchor" href="#✅-总结一句话"><span>✅ 总结一句话</span></a></h2><blockquote><p><strong>C# 是一门优雅、现代、强大的语言，尤其适合企业开发、跨平台项目与游戏开发，是微软生态中的重要支柱。</strong></p></blockquote><hr><p>👏 如果你喜欢本篇内容，欢迎收藏、分享，也可以留言告诉我是否希望出《<a href="http://ASP.NET" target="_blank" rel="noopener noreferrer">ASP.NET</a> Core 入门实践》《Unity 游戏开发指南》《C# 面向对象设计模式》等实战系列！</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,47)]))}const k=i(h,[["render",r]]),o=JSON.parse('{"path":"/zh/demo/C_.html","title":"C# 编程语言全解","lang":"zh-CN","frontmatter":{"title":"C# 编程语言全解","icon":"object-group","order":2,"category":["软件开发"],"tag":["C#"],"description":"[C# ] 编程语言全解：起源、设计理念、语法技巧与实战应用 C#C# “C# 是强大而现代的语言，融合了 C++ 的高性能与 Java 的简洁稳定。” 🧬 1. C# 的起源与创造者 C#（发音 \\"C sharp\\"）是由微软公司于 2000 年推出的现代化编程语言，由Anders Hejlsberg 主导开发（他也是 Turbo Pascal 和 ...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"C# 编程语言全解\\",\\"image\\":[\\"https://mister-hope.github.io/assets/images/Csharp_Logo.png\\"],\\"dateModified\\":\\"2025-04-21T13:50:56.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"HQSIM\\",\\"url\\":\\"https://blog.hqsim.com\\"}]}"],["meta",{"property":"og:url","content":"https://mister-hope.github.io/zh/demo/C_.html"}],["meta",{"property":"og:site_name","content":"HQSIM"}],["meta",{"property":"og:title","content":"C# 编程语言全解"}],["meta",{"property":"og:description","content":"[C# ] 编程语言全解：起源、设计理念、语法技巧与实战应用 C#C# “C# 是强大而现代的语言，融合了 C++ 的高性能与 Java 的简洁稳定。” 🧬 1. C# 的起源与创造者 C#（发音 \\"C sharp\\"）是由微软公司于 2000 年推出的现代化编程语言，由Anders Hejlsberg 主导开发（他也是 Turbo Pascal 和 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://mister-hope.github.io/assets/images/Csharp_Logo.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-04-21T13:50:56.000Z"}],["meta",{"property":"article:tag","content":"C#"}],["meta",{"property":"article:modified_time","content":"2025-04-21T13:50:56.000Z"}]]},"git":{"createdTime":1745243456000,"updatedTime":1745243456000,"contributors":[{"name":"luke","username":"luke","email":"173202461@qq.com","commits":1,"url":"https://github.com/luke"}]},"readingTime":{"minutes":2.53,"words":760},"filePathRelative":"zh/demo/C#.md","excerpt":"\\n<h1>[C# ] 编程语言全解：起源、设计理念、语法技巧与实战应用</h1>\\n<figure><img src=\\"/assets/images/Csharp_Logo.png\\" alt=\\"C#\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption>C#</figcaption></figure>\\n<blockquote>\\n<p><em>“C# 是强大而现代的语言，融合了 C++ 的高性能与 Java 的简洁稳定。”</em></p>\\n</blockquote>\\n<hr>\\n<h2>🧬 1. C# 的起源与创造者</h2>\\n<p>C#（发音 \\"C sharp\\"）是由微软公司于 2000 年推出的现代化编程语言，由<strong>Anders Hejlsberg</strong> 主导开发（他也是 Turbo Pascal 和 Delphi 的作者）。</p>","autoDesc":true}');export{k as comp,o as data};
