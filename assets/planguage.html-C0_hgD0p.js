import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,f as n,o as e}from"./app-CssdK9BZ.js";const t="/assets/images/python-logo-master-v3-TM.png",h={};function l(r,i){return e(),a("div",null,i[0]||(i[0]=[n('<p>markdown</p><h1 id="python-编程语言全解-起源、设计哲学、使用技巧与应用场景" tabindex="-1"><a class="header-anchor" href="#python-编程语言全解-起源、设计哲学、使用技巧与应用场景"><span>[Python] 编程语言全解：起源、设计哲学、使用技巧与应用场景</span></a></h1><figure><img src="'+t+`" alt="Python" tabindex="0" loading="lazy"><figcaption>Python</figcaption></figure><blockquote><p><em>“Beautiful is better than ugly. Simple is better than complex.”</em><br> ——《The Zen of Python》</p></blockquote><hr><h2 id="一、引言" tabindex="-1"><a class="header-anchor" href="#一、引言"><span>一、引言</span></a></h2><p>在当今软件开发领域，Python 凭借其简洁的语法、强大的库生态以及广泛的应用领域，<br> 已成长为全球最受欢迎的编程语言之一。<br> 它既是初学者的首选语言，也是资深开发者的高效工具。</p><p>本文将从历史背景、语言设计、底层逻辑、开发技巧及实际应用等方面，<br> 全面剖析 Python 的技术内核与价值。</p><hr><h2 id="二、python-的诞生与发展" tabindex="-1"><a class="header-anchor" href="#二、python-的诞生与发展"><span>二、Python 的诞生与发展</span></a></h2><h3 id="_2-1-起源背景" tabindex="-1"><a class="header-anchor" href="#_2-1-起源背景"><span>2.1 起源背景</span></a></h3><p>Python 诞生于 1989 年，由荷兰计算机科学家 <strong>Guido van Rossum</strong><br> 在圣诞节期间为打发假期时间而创建。<br> 彼时他是 ABC 项目的成员——一个由荷兰 CWI 研究院开发的教学语言项目。</p><h3 id="_2-2-命名由来" tabindex="-1"><a class="header-anchor" href="#_2-2-命名由来"><span>2.2 命名由来</span></a></h3><p>“Python”并非源自“蟒蛇”，而是致敬 BBC 的经典喜剧<br> 《Monty Python&#39;s Flying Circus》，体现其轻松有趣的特性。</p><h3 id="_2-3-发展历程-可插入时间轴图" tabindex="-1"><a class="header-anchor" href="#_2-3-发展历程-可插入时间轴图"><span>2.3 发展历程（可插入时间轴图）</span></a></h3><table><thead><tr><th>版本号</th><th>时间</th><th>特点</th></tr></thead><tbody><tr><td>Python 1.0</td><td>1991</td><td>模块、异常、函数</td></tr><tr><td>Python 2.x</td><td>2000</td><td>Unicode、标准库扩展</td></tr><tr><td>Python 3.x</td><td>2008</td><td>重写核心语法、兼容性大改</td></tr><tr><td>Python 3.12+</td><td>2023+</td><td>性能优化、模式匹配</td></tr></tbody></table><hr><h2 id="三、语言设计哲学" tabindex="-1"><a class="header-anchor" href="#三、语言设计哲学"><span>三、语言设计哲学</span></a></h2><p>Python 遵循“<strong>可读性优先</strong>”和“<strong>优雅胜于繁复</strong>”的原则。</p><p>你可以在解释器中键入以下指令查看《Python之禅》：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;&gt;&gt;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> this</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>核心理念摘要：</strong></p><ul><li>Beautiful is better than ugly.（美胜于丑）</li><li>Simple is better than complex.（简单优于复杂）</li><li>Readability counts.（可读性至关重要）</li></ul><hr><h2 id="四、python-的底层逻辑" tabindex="-1"><a class="header-anchor" href="#四、python-的底层逻辑"><span>四、Python 的底层逻辑</span></a></h2><h3 id="_4-1-解释型与动态类型语言" tabindex="-1"><a class="header-anchor" href="#_4-1-解释型与动态类型语言"><span>4.1 解释型与动态类型语言</span></a></h3><p>Python 是动态类型语言，使用解释器逐行执行。常见实现：</p><ul><li><strong>CPython</strong>：官方实现，使用 C 语言编写</li><li><strong>PyPy</strong>：基于 JIT 的高性能解释器</li><li><strong>Jython</strong>、<strong>IronPython</strong>：分别用于 Java 与 .NET 平台</li></ul><h3 id="_4-2-内存管理机制" tabindex="-1"><a class="header-anchor" href="#_4-2-内存管理机制"><span>4.2 内存管理机制</span></a></h3><p>Python 使用 <strong>引用计数</strong> + <strong>垃圾回收机制</strong>：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> gc</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">gc.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">collect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-3-gil-global-interpreter-lock" tabindex="-1"><a class="header-anchor" href="#_4-3-gil-global-interpreter-lock"><span>4.3 GIL（Global Interpreter Lock）</span></a></h3><p>CPython 使用全局解释器锁保证线程安全，但会限制多线程性能。<br> 在多核任务中可考虑使用 <code>multiprocessing</code> 模块。</p><hr><h2 id="五、实用技巧与高级特性" tabindex="-1"><a class="header-anchor" href="#五、实用技巧与高级特性"><span>五、实用技巧与高级特性</span></a></h2><h3 id="_5-1-列表推导式-list-comprehension" tabindex="-1"><a class="header-anchor" href="#_5-1-列表推导式-list-comprehension"><span>5.1 列表推导式（List Comprehension）</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">squares </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [x </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">**</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> x </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">in</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> range</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_5-2-生成器-generator" tabindex="-1"><a class="header-anchor" href="#_5-2-生成器-generator"><span>5.2 生成器（Generator）</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> fibonacci</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">():</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    a, b </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    while</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> True</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        yield</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> a</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        a, b </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> b, a </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> b</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-3-装饰器-decorator" tabindex="-1"><a class="header-anchor" href="#_5-3-装饰器-decorator"><span>5.3 装饰器（Decorator）</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;">func</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> wrapper</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(*</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;">args</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> **</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;">kwargs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">        print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Calling </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">{</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">func.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">__name__</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        return</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;"> func</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(*args, **kwargs)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> wrapper</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-4-数据类-dataclass" tabindex="-1"><a class="header-anchor" href="#_5-4-数据类-dataclass"><span>5.4 数据类（DataClass）</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> dataclasses </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> dataclass</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">@dataclass</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> User</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">int</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    name: </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">str</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="六、python-的核心应用场景" tabindex="-1"><a class="header-anchor" href="#六、python-的核心应用场景"><span>六、Python 的核心应用场景</span></a></h2><h3 id="_6-1-数据科学与-ai" tabindex="-1"><a class="header-anchor" href="#_6-1-数据科学与-ai"><span>6.1 数据科学与 AI</span></a></h3><ul><li>数值处理：<code>NumPy</code>、<code>Pandas</code></li><li>可视化：<code>Matplotlib</code>、<code>Seaborn</code></li><li>AI 框架：<code>TensorFlow</code>、<code>PyTorch</code></li></ul><p>📊 <em>建议配图：用 matplotlib 绘制的图形展示</em></p><h3 id="_6-2-web-开发" tabindex="-1"><a class="header-anchor" href="#_6-2-web-开发"><span>6.2 Web 开发</span></a></h3><ul><li><strong>Django</strong>：全功能 MVC 框架</li><li><strong>Flask / FastAPI</strong>：轻量、异步支持好</li></ul><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> fastapi </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> FastAPI</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">app </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;"> FastAPI</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">@app</span><span style="--shiki-light:#4078F2;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">get</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> read_root</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">():</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Hello&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;World&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-3-自动化脚本与爬虫" tabindex="-1"><a class="header-anchor" href="#_6-3-自动化脚本与爬虫"><span>6.3 自动化脚本与爬虫</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> requests</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">res </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> requests.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">get</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;https://www.example.com&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(res.text)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>结合 <code>BeautifulSoup</code> 或 <code>Scrapy</code> 可构建完整数据采集系统。</p><h3 id="_6-4-科学仿真与图像处理" tabindex="-1"><a class="header-anchor" href="#_6-4-科学仿真与图像处理"><span>6.4 科学仿真与图像处理</span></a></h3><ul><li>图像处理：<code>OpenCV</code></li><li>公式推导：<code>SymPy</code></li><li>工程建模：<code>SimPy</code></li></ul><hr><h2 id="七、生态系统与社区支持" tabindex="-1"><a class="header-anchor" href="#七、生态系统与社区支持"><span>七、生态系统与社区支持</span></a></h2><ul><li>PyPI：40 万+ 软件包生态</li><li>Jupyter：科学计算主力工具</li><li>VS Code / PyCharm：主流 IDE 支持</li><li>PyCon / Meetup 社群活跃</li></ul><p>📸 <em>可配图：Jupyter Notebook 示例界面</em></p><hr><h2 id="八、结语-为什么选择-python" tabindex="-1"><a class="header-anchor" href="#八、结语-为什么选择-python"><span>八、结语：为什么选择 Python？</span></a></h2><p>Python 不仅是一门语言，更是一种高效思维方式。</p><ul><li>适合从入门到科研</li><li>拥有无与伦比的库生态</li><li>社区活跃、学习资源丰富</li></ul><p>无论你是希望构建产品原型、开发企业后端，还是研究人工智能与大数据，Python 都是值得投入的长期技术资产。</p><hr><h2 id="版权信息" tabindex="-1"><a class="header-anchor" href="#版权信息"><span>版权信息</span></a></h2><p>本文由 ChatGPT 联合技术编辑撰写，欢迎转载分享。转载请注明来源。</p>`,68)]))}const k=s(h,[["render",l]]),o=JSON.parse('{"path":"/zh/demo/planguage.html","title":"Python 编程语言全解","lang":"zh-CN","frontmatter":{"title":"Python 编程语言全解","icon":"gears","order":4,"category":["软件开发"],"tag":["禁用"],"navbar":true,"breadcrumb":false,"pageInfo":false,"contributors":false,"editLink":false,"lastUpdated":false,"prev":false,"next":false,"comment":false,"footer":false,"backtotop":false,"description":"markdown [Python] 编程语言全解：起源、设计哲学、使用技巧与应用场景 PythonPython “Beautiful is better than ugly. Simple is better than complex.” ——《The Zen of Python》 一、引言 在当今软件开发领域，Python 凭借其简洁的语法、强大的库...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Python 编程语言全解\\",\\"image\\":[\\"https://mister-hope.github.io/assets/images/python-logo-master-v3-TM.png\\"],\\"dateModified\\":\\"2025-04-21T14:17:16.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"HQSIM\\",\\"url\\":\\"https://blog.hqsim.com\\"}]}"],["meta",{"property":"og:url","content":"https://mister-hope.github.io/zh/demo/planguage.html"}],["meta",{"property":"og:site_name","content":"HQSIM"}],["meta",{"property":"og:title","content":"Python 编程语言全解"}],["meta",{"property":"og:description","content":"markdown [Python] 编程语言全解：起源、设计哲学、使用技巧与应用场景 PythonPython “Beautiful is better than ugly. Simple is better than complex.” ——《The Zen of Python》 一、引言 在当今软件开发领域，Python 凭借其简洁的语法、强大的库..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://mister-hope.github.io/assets/images/python-logo-master-v3-TM.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-04-21T14:17:16.000Z"}],["meta",{"property":"article:tag","content":"禁用"}],["meta",{"property":"article:modified_time","content":"2025-04-21T14:17:16.000Z"}]]},"git":{"createdTime":1745109592000,"updatedTime":1745245036000},"readingTime":{"minutes":3.36,"words":1007},"filePathRelative":"zh/demo/planguage.md","excerpt":"<p>markdown</p>\\n<h1>[Python] 编程语言全解：起源、设计哲学、使用技巧与应用场景</h1>\\n<figure><img src=\\"/assets/images/python-logo-master-v3-TM.png\\" alt=\\"Python\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption>Python</figcaption></figure>\\n<blockquote>\\n<p><em>“Beautiful is better than ugly. Simple is better than complex.”</em><br>\\n——《The Zen of Python》</p>\\n</blockquote>","autoDesc":true}');export{k as comp,o as data};
